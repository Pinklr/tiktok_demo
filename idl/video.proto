syntax = "proto3";
package douyin.video;

option go_package = "video";

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  optional int64 follow_count = 3; // 关注总数
  optional int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  optional string avatar = 6; //用户头像
  optional string background_image = 7; //用户个人页顶部大图
  optional string signature = 8; //个人简介
  optional int64 total_favorited = 9; //获赞数量
  optional int64 work_count = 10; //作品数量
  optional int64 favorite_count = 11; //点赞数量
}

message Video {
  int64 id = 1; // 视频唯一标识
  User author = 2; // 视频作者信息
  string play_url = 3; // 视频播放地址
  string cover_url = 4; // 视频封面地址
  int64 favorite_count = 5; // 视频的点赞总数
  int64 comment_count = 6; // 视频的评论总数
  bool is_favorite = 7; // true-已点赞，false-未点赞
  string title = 8; // 视频标题
}

message BaseResp {
  int64 status_code = 1;
  string status_message = 2;
  int64 service_time = 3;
}

// Feed: 返回按投稿时间倒序的视频列表,
message FeedRequest {
  int64 latest_time = 1;
  int64 user_id = 2;
}

message FeedResponse {
  int64 next_time = 1;
  repeated Video videos = 2;
  BaseResp base_resp = 3;
}

//Action: 视频投稿
message VideoActionRequest{
  Video video = 1;
}
message VideoActionResponse{
  BaseResp base_resp = 1;
}

//list: 返回一个用户投稿过的所有视频
message ListRequest {
  int64 userID = 1;
}
message ListResponse {
  repeated Video videos = 1;
  BaseResp base_resp = 2;
}

// CountUserVideo统计用户发布的作品数
message CountUserVideoRequest {
  int64 userID = 1;
}
message CountUserVideoResponse {
  int64 count = 1;
  BaseResp base_resp = 2;
}

//MGetVideo: 输入一个video id列表，查询并返回Video列表
message MGetVideoRequest {
  repeated int64 videoIDs = 1;
  int64 userID = 2;
}
message MGetVideoResponse {
  repeated Video videos = 1;
  BaseResp base_resp = 2;
}

service VideoService {
  rpc Feed(FeedRequest) returns (FeedResponse) {}
  rpc VideoAction(VideoActionRequest) returns (VideoActionResponse) {}
  rpc List(ListRequest) returns (ListResponse) {}
  rpc MGetVideo(MGetVideoRequest) returns (MGetVideoResponse) {}
  rpc CountUserVideo(CountUserVideoRequest) returns (CountUserVideoResponse) {}
}